{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "üöÄ Start PyFlow (Full Stack)",
      "type": "shell",
      "command": "docker-compose",
      "args": ["up", "--build"],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new",
        "showReuseMessage": true,
        "clear": false
      },
      "problemMatcher": []
    },
    {
      "label": "üêç Start Backend Only",
      "type": "shell",
      "command": "uvicorn",
      "args": ["app.main:app", "--reload", "--host", "0.0.0.0", "--port", "8000"],
      "options": {
        "cwd": "${workspaceFolder}/backend"
      },
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "‚öõÔ∏è Start Frontend Only",
      "type": "shell",
      "command": "npm",
      "args": ["start"],
      "options": {
        "cwd": "${workspaceFolder}/frontend"
      },
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "üß™ Run All Tests",
      "type": "shell",
      "command": "python",
      "args": ["-m", "pytest", "tests/", "-v"],
      "options": {
        "cwd": "${workspaceFolder}/backend"
      },
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "üß™ Run Frontend Tests",
      "type": "shell",
      "command": "npm",
      "args": ["test", "--", "--watchAll=false"],
      "options": {
        "cwd": "${workspaceFolder}/frontend"
      },
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "‚ú® Format Code (All)",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-Command",
        "cd backend && black . && isort . && cd ../frontend && npm run format && echo '‚úÖ All files formatted!'"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "üîç Lint All Code",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-Command",
        "cd backend && pylint app/ --errors-only && cd ../frontend && npm run lint && echo '‚úÖ Linting completed!'"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "üì¶ Install All Dependencies",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-Command",
        "cd backend && pip install -r requirements.txt && cd ../frontend && npm install && echo '‚úÖ All dependencies installed!'"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "üîß Reset Environment",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-Command",
        "docker-compose down -v && docker system prune -f && echo '‚úÖ Environment reset complete!'"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "üìä Generate API Docs",
      "type": "shell",
      "command": "python",
      "args": ["-c", "import subprocess; subprocess.run(['uvicorn', 'app.main:app', '--host', '0.0.0.0', '--port', '8000']); print('API docs available at http://localhost:8000/docs')"],
      "options": {
        "cwd": "${workspaceFolder}/backend"
      },
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new"
      },
      "problemMatcher": []
    }
  ]
}